package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocumentTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentTypeAllPropertiesEquals(DocumentType expected, DocumentType actual) {
        assertDocumentTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertDocumentTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentTypeAllUpdatablePropertiesEquals(DocumentType expected, DocumentType actual) {
        assertDocumentTypeUpdatableFieldsEquals(expected, actual);
        assertDocumentTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentTypeAutoGeneratedPropertiesEquals(DocumentType expected, DocumentType actual) {
        assertThat(expected)
            .as("Verify DocumentType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentTypeUpdatableFieldsEquals(DocumentType expected, DocumentType actual) {
        assertThat(expected)
            .as("Verify DocumentType relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getDocumentMasterType()).as("check documentMasterType").isEqualTo(actual.getDocumentMasterType()))
            .satisfies(
                e -> assertThat(e.getRequiresVerification()).as("check requiresVerification").isEqualTo(actual.getRequiresVerification())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentTypeUpdatableRelationshipsEquals(DocumentType expected, DocumentType actual) {}
}
