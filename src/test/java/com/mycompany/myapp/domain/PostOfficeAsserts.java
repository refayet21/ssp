package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PostOfficeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostOfficeAllPropertiesEquals(PostOffice expected, PostOffice actual) {
        assertPostOfficeAutoGeneratedPropertiesEquals(expected, actual);
        assertPostOfficeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostOfficeAllUpdatablePropertiesEquals(PostOffice expected, PostOffice actual) {
        assertPostOfficeUpdatableFieldsEquals(expected, actual);
        assertPostOfficeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostOfficeAutoGeneratedPropertiesEquals(PostOffice expected, PostOffice actual) {
        assertThat(expected)
            .as("Verify PostOffice auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostOfficeUpdatableFieldsEquals(PostOffice expected, PostOffice actual) {
        assertThat(expected)
            .as("Verify PostOffice relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPostOfficeUpdatableRelationshipsEquals(PostOffice expected, PostOffice actual) {
        assertThat(expected)
            .as("Verify PostOffice relationships")
            .satisfies(e -> assertThat(e.getDistrict()).as("check district").isEqualTo(actual.getDistrict()));
    }
}
