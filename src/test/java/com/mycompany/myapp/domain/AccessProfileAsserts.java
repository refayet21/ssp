package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AccessProfileAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessProfileAllPropertiesEquals(AccessProfile expected, AccessProfile actual) {
        assertAccessProfileAutoGeneratedPropertiesEquals(expected, actual);
        assertAccessProfileAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessProfileAllUpdatablePropertiesEquals(AccessProfile expected, AccessProfile actual) {
        assertAccessProfileUpdatableFieldsEquals(expected, actual);
        assertAccessProfileUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessProfileAutoGeneratedPropertiesEquals(AccessProfile expected, AccessProfile actual) {
        assertThat(expected)
            .as("Verify AccessProfile auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessProfileUpdatableFieldsEquals(AccessProfile expected, AccessProfile actual) {
        assertThat(expected)
            .as("Verify AccessProfile relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStartTimeOfDay()).as("check startTimeOfDay").isEqualTo(actual.getStartTimeOfDay()))
            .satisfies(e -> assertThat(e.getEndTimeOfDay()).as("check endTimeOfDay").isEqualTo(actual.getEndTimeOfDay()))
            .satisfies(e -> assertThat(e.getDayOfWeek()).as("check dayOfWeek").isEqualTo(actual.getDayOfWeek()))
            .satisfies(e -> assertThat(e.getAction()).as("check action").isEqualTo(actual.getAction()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccessProfileUpdatableRelationshipsEquals(AccessProfile expected, AccessProfile actual) {
        assertThat(expected)
            .as("Verify AccessProfile relationships")
            .satisfies(e -> assertThat(e.getLanes()).as("check lanes").isEqualTo(actual.getLanes()));
    }
}
