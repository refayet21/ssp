package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardAllPropertiesEquals(Ward expected, Ward actual) {
        assertWardAutoGeneratedPropertiesEquals(expected, actual);
        assertWardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardAllUpdatablePropertiesEquals(Ward expected, Ward actual) {
        assertWardUpdatableFieldsEquals(expected, actual);
        assertWardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardAutoGeneratedPropertiesEquals(Ward expected, Ward actual) {
        assertThat(expected)
            .as("Verify Ward auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardUpdatableFieldsEquals(Ward expected, Ward actual) {
        assertThat(expected)
            .as("Verify Ward relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardUpdatableRelationshipsEquals(Ward expected, Ward actual) {
        assertThat(expected)
            .as("Verify Ward relationships")
            .satisfies(e -> assertThat(e.getCityCorpPoura()).as("check cityCorpPoura").isEqualTo(actual.getCityCorpPoura()))
            .satisfies(e -> assertThat(e.getUnion()).as("check union").isEqualTo(actual.getUnion()));
    }
}
