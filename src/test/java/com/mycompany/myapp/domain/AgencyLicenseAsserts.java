package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AgencyLicenseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgencyLicenseAllPropertiesEquals(AgencyLicense expected, AgencyLicense actual) {
        assertAgencyLicenseAutoGeneratedPropertiesEquals(expected, actual);
        assertAgencyLicenseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgencyLicenseAllUpdatablePropertiesEquals(AgencyLicense expected, AgencyLicense actual) {
        assertAgencyLicenseUpdatableFieldsEquals(expected, actual);
        assertAgencyLicenseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgencyLicenseAutoGeneratedPropertiesEquals(AgencyLicense expected, AgencyLicense actual) {
        assertThat(expected)
            .as("Verify AgencyLicense auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgencyLicenseUpdatableFieldsEquals(AgencyLicense expected, AgencyLicense actual) {
        assertThat(expected)
            .as("Verify AgencyLicense relevant properties")
            .satisfies(e -> assertThat(e.getFilePath()).as("check filePath").isEqualTo(actual.getFilePath()))
            .satisfies(e -> assertThat(e.getSerialNo()).as("check serialNo").isEqualTo(actual.getSerialNo()))
            .satisfies(e -> assertThat(e.getIssueDate()).as("check issueDate").isEqualTo(actual.getIssueDate()))
            .satisfies(e -> assertThat(e.getExpiryDate()).as("check expiryDate").isEqualTo(actual.getExpiryDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAgencyLicenseUpdatableRelationshipsEquals(AgencyLicense expected, AgencyLicense actual) {
        assertThat(expected)
            .as("Verify AgencyLicense relationships")
            .satisfies(e -> assertThat(e.getAgencyLicenseType()).as("check agencyLicenseType").isEqualTo(actual.getAgencyLicenseType()))
            .satisfies(e -> assertThat(e.getBelongsTo()).as("check belongsTo").isEqualTo(actual.getBelongsTo()))
            .satisfies(e -> assertThat(e.getIssuedBy()).as("check issuedBy").isEqualTo(actual.getIssuedBy()));
    }
}
