package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleAssignmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAssignmentAllPropertiesEquals(VehicleAssignment expected, VehicleAssignment actual) {
        assertVehicleAssignmentAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleAssignmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAssignmentAllUpdatablePropertiesEquals(VehicleAssignment expected, VehicleAssignment actual) {
        assertVehicleAssignmentUpdatableFieldsEquals(expected, actual);
        assertVehicleAssignmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAssignmentAutoGeneratedPropertiesEquals(VehicleAssignment expected, VehicleAssignment actual) {
        assertThat(expected)
            .as("Verify VehicleAssignment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAssignmentUpdatableFieldsEquals(VehicleAssignment expected, VehicleAssignment actual) {
        assertThat(expected)
            .as("Verify VehicleAssignment relevant properties")
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()))
            .satisfies(e -> assertThat(e.getIsPrimary()).as("check isPrimary").isEqualTo(actual.getIsPrimary()))
            .satisfies(e -> assertThat(e.getIsRental()).as("check isRental").isEqualTo(actual.getIsRental()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleAssignmentUpdatableRelationshipsEquals(VehicleAssignment expected, VehicleAssignment actual) {
        assertThat(expected)
            .as("Verify VehicleAssignment relationships")
            .satisfies(e -> assertThat(e.getAgency()).as("check agency").isEqualTo(actual.getAgency()))
            .satisfies(e -> assertThat(e.getVehicle()).as("check vehicle").isEqualTo(actual.getVehicle()));
    }
}
