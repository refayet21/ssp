package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GateAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGateAllPropertiesEquals(Gate expected, Gate actual) {
        assertGateAutoGeneratedPropertiesEquals(expected, actual);
        assertGateAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGateAllUpdatablePropertiesEquals(Gate expected, Gate actual) {
        assertGateUpdatableFieldsEquals(expected, actual);
        assertGateUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGateAutoGeneratedPropertiesEquals(Gate expected, Gate actual) {
        assertThat(expected)
            .as("Verify Gate auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGateUpdatableFieldsEquals(Gate expected, Gate actual) {
        assertThat(expected)
            .as("Verify Gate relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getShortName()).as("check shortName").isEqualTo(actual.getShortName()))
            .satisfies(e -> assertThat(e.getLat()).as("check lat").isEqualTo(actual.getLat()))
            .satisfies(e -> assertThat(e.getLon()).as("check lon").isEqualTo(actual.getLon()))
            .satisfies(e -> assertThat(e.getGateType()).as("check gateType").isEqualTo(actual.getGateType()))
            .satisfies(e -> assertThat(e.getIsActive()).as("check isActive").isEqualTo(actual.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGateUpdatableRelationshipsEquals(Gate expected, Gate actual) {
        assertThat(expected)
            .as("Verify Gate relationships")
            .satisfies(e -> assertThat(e.getZone()).as("check zone").isEqualTo(actual.getZone()));
    }
}
